[project]
name = "aid-dashboard"
version = "0.1.0"
description = ""
authors = [{ name = "Kevin O'Brien", email = "kpo489@aol.com" }]
readme = "README.md"
requires-python = ">=3.12"

# PEP 621-style version specifiers (no parentheses)
dependencies = [
  "flask>=3.1.1,<4",
  "flask-compress>=1.18,<2",
  "requests>=2.32.4,<3",
  "geojson>=3.2.0,<4",

  # Geo stack â€” loosened so Poetry can pick 3.12-compatible wheels
  # If install issues arise on your machine/CI, we can pin these tighter based on the error.
  "geopandas>=0.14.0",
]

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
pytest-cov = "^5.0.0"
ruff = "^0.12.8"
black = "^25.1.0"
mypy = "^1.17.1"

[tool.pytest.ini_options]
addopts = "-q --cov=backend --cov-report=term-missing"
testpaths = ["tests"]
pythonpath = ["backend"]

[tool.ruff]
line-length = 100
target-version = "py312"
extend-exclude = [
  "data/",
  "aid_dashboard_data/",
  ".venv/",
  "__pycache__/",
  ".pytest_cache/",
  "frontend/assets/",
]
select = ["E","F","I","B","UP","SIM","PL"]
ignore = ["E203"]

[tool.ruff.lint.isort]
known-first-party = ["backend"]
combine-as-imports = true

[tool.black]
line-length = 100
target-version = ["py312"]
include = "backend/.*\\.py"

[tool.mypy]
python_version = "3.12"
plugins = []
strict = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unreachable = true
show_error_codes = true
explicit_package_bases = true
ignore_missing_imports = true

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"